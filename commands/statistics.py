from aiogram.types import Message
from aiogram.utils.exceptions import MessageNotModified, BotBlocked, InvalidQueryID
from objects.globals import dispatcher, logger, config
from objects import globals
from modules import database
from db_models.User import User

from datetime import datetime, timedelta

@dispatcher.message_handler(commands="stat888")
@dispatcher.message_handler(lambda message: message.text == "üî• –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def stats_command(message: Message):
    globals.add_usage_stats()
    try:
        await database.create_user(message.from_user.id)
        await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - {(await User.objects.count())}\n"
                             f"–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ 24 —á–∞—Å–∞ - {await database.last_day_users()}\n"
                             f"–ù–æ–≤—ã—Ö –∑–∞ 24 —á–∞—Å–∞ - {await database.last_day_new_users()}\n\n"
                             f"–†–∞—Å—Å—ã–ª–∫–∞:\n"
                             f"–ü–æ–ª—É—á–∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—é—é - {'—Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–µ –ø—Ä–æ–≤–æ–¥–∏–ª–∞—Å—å' if globals.received_ad == -1 else globals.received_ad}\n"
                             f"–°–µ–π—á–∞—Å –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è: {'–î–∞' if globals.is_mass_sending else '–ù–µ—Ç'}\n"
                             f"–£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {globals.current_ad_sent}\n"
                             f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å: {globals.current_ad_cant_sent}\n\n"
                             f"–ü–µ—Å–Ω–∏:\n"
                             f"–í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∑–æ–∫ - {await database.total_downloads()}\n"
                             f"–ó–∞–≥—Ä—É–∑–æ–∫ –∑–∞ 24 —á–∞—Å–∞ - {await database.last_day_downloads()}",

                             reply=True)
    except (MessageNotModified, BotBlocked, InvalidQueryID): pass
    except Exception as e:
        logger.exception(e)